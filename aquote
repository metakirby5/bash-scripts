#!/usr/bin/env bash
# Notify with anime quotes.
#
# Author: metakirby5

usage() {
  echo "USAGE: $(basename "$0") [hummingbird.me anime id]"
  exit 1
}

[ "$#" -ne 1 ] && usage

anime="$(echo "$1" |\
  tr '[:upper:]' '[:lower:]' | awk '{$1=$1};1' | tr ' ' '-')"
len=50

notify() {
  if type notify-send &>/dev/null; then
    notify-send -a 'aquote' "$1" "$2"
  elif type osascript &>/dev/null; then
    osascript -e "display notification \"$(tr -d \" <<< "$2")\" \
with title \"$(tr -d \" <<< "$1")\""
  else
    echo 'No notifier available.'
    exit 1
  fi
}

json="$(curl -s \
	-H 'Accept: application/json' \
	-H 'X-Requested-With: XMLHttpRequest' \
	"https://hummingbird.me/quotes?anime_id=$anime")"

num_quotes="$(echo "$json" | jq '.quotes | length')"
if [ "$num_quotes" -eq 0 ]; then
	notify "Anime \"$anime\" not found!"
	exit 1
fi

selected_num="$((RANDOM % $num_quotes))"
selected="$(echo "$json" | jq ".quotes[$selected_num]")"
quote="$(echo "$selected" | jq -r '.content' | fold -sw "$len")"
who="$(echo "$selected" | jq -r '.character_name')"

notify "$(echo "$anime" | sed 's/\b\(.\)/\u\1/g' | tr '-' ' ')" \
  "$quote\n\n\t-$who"

