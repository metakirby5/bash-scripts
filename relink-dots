#!/usr/bin/env bash
# Relinks configs from source folders to a destination folder.
#
# DEPRECATED! I use GNU Stow now.
#
# Author: metakirby5

### CONFIG

# Base directory to link from
BASE_DIR=~/.dots

# Associative array: to link -> real
declare -A TO_LINK
TO_LINK=(
  [home]=~
)

# Files to ignore
IGNORE=(
  *.swp
)

### SCRIPT

# Set newline delimiter in for loops
IFS=$'\n'

# Check for directory existence
if [ ! -d "$BASE_DIR" ]; then
  echo "Base directory $BASE_DIR does not exist!"
  exit 1
fi

for key in "${!TO_LINK[@]}"; do

  # Get the path of the next directory to link
  dir="${BASE_DIR%%/}/$key"
  dir="${dir%%/}/"

  # Check for directory existence
  if [ ! -d "$dir" ]; then
    echo "To link directory $dir does not exist! Skipping..."
    continue
  fi

  # To save directories to link
  linkdirs=()
  
  # Print summary
  echo
  echo "LINKING: $dir -> ${TO_LINK[$key]}"
  echo

  # If directory contained ._linkdir, save for later
  # and ignore further matches to directory
  for src in `find $dir | grep "/\._linkdir$"`; do
    linkdir="${src%%/._linkdir}"
    linkdirs+=("$linkdir")
    IGNORE+=("$linkdir*")
    echo "  $linkdir DIRECT LINK"
    echo
  done

  for src in `find $dir`; do

    # Skip things in ignore
    skip=false
    for pat in "${IGNORE[@]}"; do
      [[ "$src" == $pat ]] && skip=true
    done
    [ "$skip" = true ] && continue

    # Attach the value to the filename
    dest="${TO_LINK[$key]%%/}/${src##$dir}"

    # Skip directories
    [ -d "$dest" ] && continue

    echo "  $src ->"
    echo "    $dest"
    echo
  done

  # Ask for confirmation
  read -r -p "  Are you sure? [y/N] " response
  case "$response" in
    [yY][eE][sS]|[yY]) 
      echo "  Proceeding..."
      ;;
    *) # Skip
      echo "  Skipping..."
      echo
      continue
      ;;
  esac

  # Do the linking
  for src in `find $dir`; do

    # Skip things in ignore
    skip=false
    for pat in "${IGNORE[@]}"; do
      [[ "$src" == $pat ]] && skip=true
    done
    [ "$skip" = true ] && continue

    # Attach the value to the filename
    dest="${TO_LINK[$key]%%/}/${src##$dir}"

    # Skip directories
    [ -d "$src" ] && continue

    # Extract the directory name
    dest_dir="$(dirname $dest)"
    mkdir -p "$dest_dir"
    cd "$dest_dir"

    # Remove and link
    rm "$dest" 2>/dev/null
    ln -s "$src"
  done

  # Handle linkdirs
  for linkdir in "${linkdirs[@]}"; do

    # Attach the value to the linkdir
    dest="${TO_LINK[$key]%%/}/${linkdir##$dir}"

    # Remove and link
    rm -rf "$dest" 2>/dev/null
    cd "$(dirname "$dest")"
    ln -s "$linkdir"
  done

  echo "  Done!"
  echo
done
