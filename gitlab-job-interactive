#!/usr/bin/env bash
# Interactive interface for gitlab jobs.
# API calls inferred from repo information.
#
# Dependencies: gitlab-job-id, gitlab-job-action, gitlab-job-monitor,
#               gitlab-api, git, urlencode, curl, jq, fzf, pb
# Environment variables: $GITLAB_TOKEN
#
# Usage: gitlab-job-interactive (git ref)
#
# Author: metakirby5

set -e

log() {
  echo "$@" >/dev/stderr
}

fail() {
  log "$@"
  exit 1
}

checkdep() {
  type "$1" &>/dev/null || echo " $1"
}

missing="\
$(checkdep gitlab-job-id)\
$(checkdep gitlab-job-action)\
$(checkdep gitlab-job-monitor)\
$(checkdep gitlab-api)\
$(checkdep git)\
$(checkdep urlencode)\
$(checkdep curl)\
$(checkdep jq)\
$(checkdep fzf)\
$(checkdep pb)\
"
[ "$missing" ] && fail "The following dependencies are missing:$missing"
[ -z "$GITLAB_TOKEN" ] && fail 'Missing $GITLAB_TOKEN!'

job="$(gitlab-job-id "$@")"
name="$(gitlab-job-action name "$job")"
log "Job: $name ($job)"

monitor-and-notify() {
  gitlab-job-monitor "$1"
  pb push -d 0 "$name done!"
}

action="$(fzf --prompt "$name: " <<EOF
info
artifacts
logs
cancel
retry
retry + monitor
play
play + monitor
monitor
EOF
)"

case "$action" in
  info|artifacts|logs|cancel|retry|play)
    gitlab-job-action "$action" "$job"
    ;;
  *\ +\ monitor)
    base_action="${action%% *}"
    result="$(gitlab-job-action "$base_action" "$job")"
    log "$result"

    new_job="$(<<<"$result" cut -f 1)"
    monitor-and-notify "$new_job"
    ;;
  monitor)
    monitor-and-notify "$job"
    ;;
  *)
    fail "Invalid action $action."
    ;;
esac
