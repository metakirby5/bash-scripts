#!/usr/bin/env bash
# Runs a task for a gitlab job.
# API calls inferred from repo information.
#
# Dependencies: gitlab-api, git, urlencode, curl, jq
# Environment variables: $GITLAB_TOKEN
#
# Usage: gitlab-job [action] [job id]
#
# Author: metakirby5

log() {
  echo "$@" >/dev/stderr
}

fail() {
  log "$@"
  exit 1
}

checkdep() {
  which "$1" &>/dev/null || echo " $1"
}

missing="\
$(checkdep gitlab-api)\
$(checkdep git)\
$(checkdep urlencode)\
$(checkdep curl)\
$(checkdep jq)\
"
[ "$missing" ] && fail "The following dependencies are missing:$missing"
[ -z "$GITLAB_TOKEN" ] && fail 'Missing $GITLAB_TOKEN!'

usage() {
  echo "Usage: ${0##*/} [action] [job id]"
  echo "Actions: name, info, artifacts, logs, cancel, retry, play"
  echo
  exit 1
}

[ "$#" -ne 2 ] && usage

call() {
  gitlab-api "$@" 2>/dev/null
}

post() {
  call "$@" --request POST
}

parse() {
  jq -r "$@" 2>/dev/null
}

parse-status() {
  parse '"\(.id)\t\(.status)\t\(.web_url)"'
}

base="jobs/$2"
case "$1" in
  name)
    call "$base" | parse '.name'
    ;;
  info)
    call "$base" | jq -r '
def date: if . then sub("\\.[^Z]*"; "") | fromdate | strftime("%c") else "-" end;
"
  \(.name) (\(.id)): \(.status)
  \(.pipeline.ref) (\(.pipeline.sha))
  \(.web_url)
    Runner:\t\(.runner.description // "-")
    Created:\t\(.created_at | date)
    Started:\t\(.started_at | date)
    Finished:\t\(.finished_at | date)
"
    '
    ;;
  artifacts)
    gitlab-api "$base/artifacts" -o artifacts.zip
    ;;
  logs)
    call "$base/trace" | less -r
    ;;
  cancel)
    post "$base/cancel" | parse-status
    ;;
  retry)
    post "$base/retry" | parse-status
    ;;
  play)
    post "$base/play" | parse-status
    ;;
  *)
    usage
    ;;
esac
